<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>aldinucci.piero.apt.project</groupId>
	<artifactId>bookstore-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- This property will be changed to true if Java 9 or more is detected.
			It's used to deactivate plugins that won't work with that Java version -->
		<jdk9-or-more>false</jdk9-or-more>
		<sonar.exclusions>**/model/*.java</sonar.exclusions>
		<sonar.coverage.exclusions>
			**/exceptions/*.*,
			**/app/swing/*.*
		</sonar.coverage.exclusions>
		<sonar.issue.ignore.multicriteria>e1,e2,e3</sonar.issue.ignore.multicriteria>
		<!-- Rule: inheritance depth larger than 5 -->
		<sonar.issue.ignore.multicriteria.e1.ruleKey>java:S110</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<sonar.issue.ignore.multicriteria.e1.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e1.resourceKey>
		<!-- Rule: no assertions, because assertj-swing is used instead -->
		<sonar.issue.ignore.multicriteria.e2.ruleKey>java:S2699</sonar.issue.ignore.multicriteria.e2.ruleKey>
		<sonar.issue.ignore.multicriteria.e2.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e2.resourceKey>
		<!-- Class names for *E2E test classes -->
		<sonar.issue.ignore.multicriteria.e3.ruleKey>java:S3577</sonar.issue.ignore.multicriteria.e3.ruleKey>
		<sonar.issue.ignore.multicriteria.e3.resourceKey>**/app/swing/*.java</sonar.issue.ignore.multicriteria.e3.resourceKey>
		
		<postgres.test.username>testUser</postgres.test.username>
		<postgres.test.password>password</postgres.test.password>
	</properties>

	<modules>
		<module>../bookstore-core</module>
		<module>../bookstore-mvc</module>
		<module>../bookstore-app</module>
	</modules>
	
	
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-assistedinject</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.13.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>2.14.0</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<!-- Version 42.2.18 can give errors of classes not found after installation -->
				<version>42.2.14</version> 
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>5.4.27.Final</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>3.18.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-swing-junit</artifactId>
				<version>3.17.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>3.6.28</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice-bom</artifactId>
				<version>4.2.3</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>info.picocli</groupId>
				<artifactId>picocli</artifactId>
				<version>4.6.1</version>
			</dependency>
			<!-- Java library for Hibernate that manages database connections -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-c3p0</artifactId>
				<version>5.4.27.Final</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.7.0.1746</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>3.0.0-M5</version>
					<executions>
						<execution>
							<id>default-it</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.2.0</version>
					<executions>
						<execution>
							<id>add-test-source</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/it/java</source>
									<source>src/e2e/java</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.6</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal> <!-- Initialize -->
								<goal>report</goal> <!-- verify -->
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>4.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>1.6.1</version>
					<executions>
						<execution>
							<goals>
								<goal>mutationCoverage</goal>
							</goals>
							<phase>integration-test</phase>
						</execution>
					</executions>
					<configuration>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>100</mutationThreshold>
					</configuration>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.34.1</version>
					<configuration>
						<showLogs>true</showLogs>
						<images>
							<image>
								<alias>app-postgres</alias>
								<name>postgres:13.1</name>
								<run>
									<ports>
										<port>5432:5432</port>
									</ports>
									<env>
										<POSTGRES_USER>${postgres.test.username}</POSTGRES_USER>
										<POSTGRES_PASSWORD>${postgres.test.password}</POSTGRES_PASSWORD>
										<POSTGRES_DB>projectAPTTestDb</POSTGRES_DB>
									</env>
									<wait>
										<log>(?s)\[1\] LOG:  database system is ready to accept connections</log>
										<time>20000</time>
									</wait>
								</run>
							</image>
						</images>
					</configuration>
					<executions>
						<execution>
							<id>docker:start</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>docker:stop</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<plugin>
			    	<groupId>org.apache.maven.plugins</groupId>
			    	<artifactId>maven-jar-plugin</artifactId>
    				<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
    				<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<!-- Higher versions will give errors on Java 8  -->
					<version>3.0.1</version>
					<executions>
				    	<execution>
				    		<id>attach-javadoc</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
    				<version>3.2.1</version>
    				<executions>
    					<execution>
    						<id>attach-sources</id>
    						<goals>
    							<goal>jar</goal>
    						</goals>
    					</execution>
    				</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.6.0</version>
					<configuration>
						<skip>${jdk9-or-more}</skip>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


	<profiles>
		<profile>
			<id>jdk9+</id>
			<properties>
				<jdk9-or-more>true</jdk9-or-more>
			</properties>
			<activation>
				<jdk>[1.9,)</jdk>
			</activation>
		</profile>

		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<configuration>
							<skip>${jdk9-or-more}</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>mutation-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>e2e-test</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<executions>
								<execution>
									<id>e2e-tests</id>
									<goals>
										<goal>integration-test</goal>
										<goal>verify</goal>
									</goals>
									<configuration>
										<excludes>
											<exclude>**/*IT.java</exclude>
										</excludes>
										<includes>
											<include>**/*E2E.java</include>
										</includes>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

	</profiles>
</project>